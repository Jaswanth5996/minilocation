{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://your-backend-url.com/api'; // Replace with your correct URL\n\nconst instance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Example: Add a request interceptor to add an authorization token\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken'); // Example for JWT token\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Example: Add a response interceptor\ninstance.interceptors.response.use(response => response,\n// Return the response if successful\nerror => {\n  // Handle error globally here (e.g., log out user if 401 Unauthorized)\n  if (error.response && error.response.status === 401) {\n    console.log('Unauthorized - Please log in.');\n    // Redirect or handle accordingly\n  }\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","instance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","console","log"],"sources":["C:/Users/janga divya/OneDrive/Desktop/hihi/src/utils/axios.js"],"sourcesContent":["import axios from \"axios\";\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://your-backend-url.com/api'; // Replace with your correct URL\r\n\r\nconst instance = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Example: Add a request interceptor to add an authorization token\r\ninstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('authToken'); // Example for JWT token\r\n  if (token) {\r\n    config.headers['Authorization'] = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n}, (error) => {\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Example: Add a response interceptor\r\ninstance.interceptors.response.use(\r\n  (response) => response, // Return the response if successful\r\n  (error) => {\r\n    // Handle error globally here (e.g., log out user if 401 Unauthorized)\r\n    if (error.response && error.response.status === 401) {\r\n      console.log('Unauthorized - Please log in.');\r\n      // Redirect or handle accordingly\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,iCAAiC,CAAC,CAAC;;AAEpF,MAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC5BC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,QAAQ,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC5C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;EACjD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EAAGI,KAAK,IAAK;EACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;;AAEF;AACAX,QAAQ,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC/BQ,QAAQ,IAAKA,QAAQ;AAAE;AACvBH,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnDC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C;EACF;EACA,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}