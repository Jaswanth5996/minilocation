{"ast":null,"code":"import axios from 'axios';\nexport const getLocationFromCoords = async (lat, lng) => {\n  try {\n    var _res$data;\n    console.log(`üìç Fetching address for: Latitude: ${lat}, Longitude: ${lng}`);\n    const res = await axios.get('https://nominatim.openstreetmap.org/reverse', {\n      params: {\n        lat,\n        lon: lng,\n        format: 'json',\n        zoom: 18,\n        addressdetails: 1\n      },\n      headers: {\n        'User-Agent': 'YourAppName/1.0' // ‚úÖ Required by Nominatim\n      }\n    });\n    console.log('üåç Full Response:', res.data);\n    if (res.data.error) {\n      throw new Error(res.data.error);\n    }\n    if ((_res$data = res.data) !== null && _res$data !== void 0 && _res$data.address) {\n      const {\n        house_number,\n        road,\n        suburb,\n        city,\n        state,\n        country\n      } = res.data.address;\n      const formattedAddress = [house_number, road, suburb, city, state, country].filter(Boolean) // ‚úÖ Remove empty values\n      .join(', ');\n      console.log(`‚úÖ Found address: ${formattedAddress}`);\n      return formattedAddress || 'Address not found';\n    } else {\n      throw new Error('No address found');\n    }\n  } catch (err) {\n    console.error('‚ùå Reverse geocoding failed:', err.message);\n    return 'Address not found';\n  }\n};","map":{"version":3,"names":["axios","getLocationFromCoords","lat","lng","_res$data","console","log","res","get","params","lon","format","zoom","addressdetails","headers","data","error","Error","address","house_number","road","suburb","city","state","country","formattedAddress","filter","Boolean","join","err","message"],"sources":["C:/Users/janga divya/OneDrive/Desktop/hihi/src/utils/getLocationFromCoords.js"],"sourcesContent":["import axios from 'axios';\r\n export const getLocationFromCoords = async (lat, lng) => {\r\n    try {\r\n      console.log(`üìç Fetching address for: Latitude: ${lat}, Longitude: ${lng}`);\r\n  \r\n      const res = await axios.get('https://nominatim.openstreetmap.org/reverse', {\r\n        params: {\r\n          lat,\r\n          lon: lng,\r\n          format: 'json',\r\n          zoom: 18,\r\n          addressdetails: 1\r\n        },\r\n        headers: {\r\n          'User-Agent': 'YourAppName/1.0' // ‚úÖ Required by Nominatim\r\n        }\r\n      });\r\n  \r\n      console.log('üåç Full Response:', res.data);\r\n  \r\n      if (res.data.error) {\r\n        throw new Error(res.data.error);\r\n      }\r\n  \r\n      if (res.data?.address) {\r\n        const { house_number, road, suburb, city, state, country } = res.data.address;\r\n        const formattedAddress = [house_number, road, suburb, city, state, country]\r\n          .filter(Boolean) // ‚úÖ Remove empty values\r\n          .join(', ');\r\n          \r\n        console.log(`‚úÖ Found address: ${formattedAddress}`);\r\n        return formattedAddress || 'Address not found';\r\n      } else {\r\n        throw new Error('No address found');\r\n      }\r\n    } catch (err) {\r\n      console.error('‚ùå Reverse geocoding failed:', err.message);\r\n      return 'Address not found';\r\n    }\r\n  };\r\n  "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACxB,OAAO,MAAMC,qBAAqB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EACtD,IAAI;IAAA,IAAAC,SAAA;IACFC,OAAO,CAACC,GAAG,CAAC,sCAAsCJ,GAAG,gBAAgBC,GAAG,EAAE,CAAC;IAE3E,MAAMI,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,6CAA6C,EAAE;MACzEC,MAAM,EAAE;QACNP,GAAG;QACHQ,GAAG,EAAEP,GAAG;QACRQ,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE,EAAE;QACRC,cAAc,EAAE;MAClB,CAAC;MACDC,OAAO,EAAE;QACP,YAAY,EAAE,iBAAiB,CAAC;MAClC;IACF,CAAC,CAAC;IAEFT,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,GAAG,CAACQ,IAAI,CAAC;IAE1C,IAAIR,GAAG,CAACQ,IAAI,CAACC,KAAK,EAAE;MAClB,MAAM,IAAIC,KAAK,CAACV,GAAG,CAACQ,IAAI,CAACC,KAAK,CAAC;IACjC;IAEA,KAAAZ,SAAA,GAAIG,GAAG,CAACQ,IAAI,cAAAX,SAAA,eAARA,SAAA,CAAUc,OAAO,EAAE;MACrB,MAAM;QAAEC,YAAY;QAAEC,IAAI;QAAEC,MAAM;QAAEC,IAAI;QAAEC,KAAK;QAAEC;MAAQ,CAAC,GAAGjB,GAAG,CAACQ,IAAI,CAACG,OAAO;MAC7E,MAAMO,gBAAgB,GAAG,CAACN,YAAY,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,CAAC,CACxEE,MAAM,CAACC,OAAO,CAAC,CAAC;MAAA,CAChBC,IAAI,CAAC,IAAI,CAAC;MAEbvB,OAAO,CAACC,GAAG,CAAC,oBAAoBmB,gBAAgB,EAAE,CAAC;MACnD,OAAOA,gBAAgB,IAAI,mBAAmB;IAChD,CAAC,MAAM;MACL,MAAM,IAAIR,KAAK,CAAC,kBAAkB,CAAC;IACrC;EACF,CAAC,CAAC,OAAOY,GAAG,EAAE;IACZxB,OAAO,CAACW,KAAK,CAAC,6BAA6B,EAAEa,GAAG,CAACC,OAAO,CAAC;IACzD,OAAO,mBAAmB;EAC5B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}